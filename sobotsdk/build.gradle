apply plugin: 'com.android.library'
apply plugin: 'android-apt'
apply plugin: 'com.neenbedankt.android-apt'

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger

android.libraryVariants.all{ variant ->

/*  if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return
    }
*/

    JavaCompile javaCompile = variant.javaCompiler
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        println "ajc2 args: " + Arrays.toString(args)

        def start= new Date().time

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)

        println "ajc2 args: cost  " + (new Date().time-start)+"ms";

        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break
            }
        }
    }
}



android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
    }

    libraryVariants.all {
        it.generateBuildConfig.enabled = false
    }
}

apt {
    arguments {
        apiProjectPath "${rootProject.projectDir}/thirdlibrary".toString()
        packageName "com.huatu.autoapi"
        apiBuildEnable "true"    //生成完设为false
        logOpen "true"
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    compile 'com.android.support:support-v4:27.1.1'
    //compileOnly 'com.android.support:support-v4:26.1.0'
    // compileOnly 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    provided 'com.baijia.common.glide:glide:4.8.1'
    //compileOnly 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.sobot.chat:sobotsupport-glidev4:1.0.8'
    compile 'org.aspectj:aspectjrt:1.8.13'
    compile 'com.netease.libs:autoapi:1.1.0'
    apt 'com.netease.libs:autoapi_process:1.1.0'
    compile project(':thirdlibrary')
}